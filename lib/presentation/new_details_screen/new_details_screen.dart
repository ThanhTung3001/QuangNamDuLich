import 'controller/new_details_controller.dart';import 'package:flutter/material.dart';import 'package:quang_nam_travel/core/app_export.dart';import 'package:quang_nam_travel/presentation/b_n_page/b_n_page.dart';import 'package:quang_nam_travel/presentation/s_ki_n_page/s_ki_n_page.dart';import 'package:quang_nam_travel/presentation/t_o_l_ch_tr_nh_page/t_o_l_ch_tr_nh_page.dart';import 'package:quang_nam_travel/presentation/t_ph_ng_nhanh_page/t_ph_ng_nhanh_page.dart';import 'package:quang_nam_travel/widgets/app_bar/appbar_image.dart';import 'package:quang_nam_travel/widgets/app_bar/appbar_title.dart';import 'package:quang_nam_travel/widgets/app_bar/custom_app_bar.dart';import 'package:quang_nam_travel/widgets/custom_bottom_bar.dart';class NewDetailsScreen extends GetWidget<NewDetailsController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, appBar: CustomAppBar(height: getVerticalSize(56.00), centerTitle: true, title: Container(decoration: AppDecoration.outlineBluegray80033, child: Row(mainAxisAlignment: MainAxisAlignment.start, crossAxisAlignment: CrossAxisAlignment.center, mainAxisSize: MainAxisSize.max, children: [AppbarImage(height: getSize(24.00), width: getSize(24.00), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 10, bottom: 10), onTap: onTapArrowleft), AppbarTitle(text: "lbl_tin_t_c".tr, margin: getMargin(left: 115, top: 9, right: 155, bottom: 8))])), styleType: Style.bgShadowBluegray80033), body: Container(width: size.width, child: SingleChildScrollView(child: Padding(padding: getPadding(left: 15, top: 24, right: 15), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Container(width: getHorizontalSize(343.00), margin: getMargin(right: 1), child: Text("msg_o_k_c_h_i_an".tr, maxLines: null, textAlign: TextAlign.justify, style: AppStyle.txtMulishRomanBold16.copyWith(height: 1.38)))), GestureDetector(onTap: () {onTapRowcalendar();}, child: Padding(padding: getPadding(left: 1, top: 8, right: 10), child: Row(mainAxisAlignment: MainAxisAlignment.start, crossAxisAlignment: CrossAxisAlignment.start, mainAxisSize: MainAxisSize.min, children: [Padding(padding: getPadding(top: 2, bottom: 2), child: CommonImageView(svgPath: ImageConstant.imgCalendar, height: getSize(16.00), width: getSize(16.00))), Padding(padding: getPadding(left: 5), child: Obx(() => Text(controller.newDetailsModelObj.value.dateTxt.value, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtMulishRomanMedium16.copyWith(height: 1.31))))]))), Align(alignment: Alignment.center, child: Container(width: getHorizontalSize(343.00), margin: getMargin(left: 1, top: 14), child: Text("msg_ng_y_11_11_t_i".tr, maxLines: null, textAlign: TextAlign.justify, style: AppStyle.txtMulishRomanRegular14.copyWith(height: 1.43)))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 1, top: 16, right: 1), child: ClipRRect(borderRadius: BorderRadius.circular(getHorizontalSize(10.00)), child: CommonImageView(imagePath: ImageConstant.imgThixaht1, height: getVerticalSize(189.00), width: getHorizontalSize(343.00), fit: BoxFit.cover)))), Align(alignment: Alignment.center, child: Container(width: getHorizontalSize(343.00), margin: getMargin(left: 1, top: 18, right: 1), child: Text("msg_n_m_gi_a_d_ng_s_ng".tr, maxLines: null, textAlign: TextAlign.justify, style: AppStyle.txtMulishRomanRegular14.copyWith(height: 1.43)))), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(left: 119, top: 7, right: 1), child: Text("msg_nh_t_minh_theo".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtMulishRomanBold13.copyWith(height: 1.31))))])))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {controller.type.value = type;}))); } 
Widget getCurrentWidget(BottomBarEnum type) { switch (type) {case BottomBarEnum.Trangch: return TPhNgNhanhPage(); case BottomBarEnum.Skin: return SKiNPage(); case BottomBarEnum.Lchtrnh: return TOLChTrNhPage(); case BottomBarEnum.Bn: return BNPage(); default: return getDefaultWidget();} } 
Future<void> onTapRowcalendar() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.newDetailsModelObj.value.selectedDateTxt , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.newDetailsModelObj.value.selectedDateTxt=dateTime;controller.newDetailsModelObj.value.dateTxt.value=dateTime.format(SHORT_DATE_WITH_FULL_YEAR);} } 
onTapArrowleft() { Get.back(); } 
 }
