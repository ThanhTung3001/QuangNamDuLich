import '../tin_t_c_screen/widgets/tin_t_c_item_widget.dart';import 'controller/tin_t_c_controller.dart';import 'models/tin_t_c_item_model.dart';import 'package:flutter/material.dart';import 'package:quang_nam_travel/core/app_export.dart';import 'package:quang_nam_travel/presentation/b_n_page/b_n_page.dart';import 'package:quang_nam_travel/presentation/s_ki_n_page/s_ki_n_page.dart';import 'package:quang_nam_travel/presentation/t_o_l_ch_tr_nh_page/t_o_l_ch_tr_nh_page.dart';import 'package:quang_nam_travel/presentation/t_ph_ng_nhanh_page/t_ph_ng_nhanh_page.dart';import 'package:quang_nam_travel/widgets/app_bar/appbar_circleimage.dart';import 'package:quang_nam_travel/widgets/app_bar/appbar_image.dart';import 'package:quang_nam_travel/widgets/app_bar/appbar_title.dart';import 'package:quang_nam_travel/widgets/app_bar/custom_app_bar.dart';import 'package:quang_nam_travel/widgets/custom_bottom_bar.dart';class TinTCScreen extends GetWidget<TinTCController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, appBar: CustomAppBar(height: getVerticalSize(56.00), centerTitle: true, title: Container(decoration: AppDecoration.outlineBluegray80033, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.center, mainAxisSize: MainAxisSize.max, children: [AppbarImage(height: getSize(24.00), width: getSize(24.00), svgPath: ImageConstant.imgMenu, margin: getMargin(left: 16, top: 10, bottom: 10)), AppbarTitle(text: "lbl_tin_t_c".tr, margin: getMargin(left: 115, top: 9, bottom: 8)), AppbarCircleimage(svgPath: ImageConstant.imgSearch, margin: getMargin(left: 115, top: 10, right: 16, bottom: 10))])), styleType: Style.bgShadowBluegray80033), body: SingleChildScrollView(child: Padding(padding: getPadding(left: 16, top: 10, right: 16), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(height: getVerticalSize(200.00), width: getHorizontalSize(343.00), child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.centerLeft, child: InkWell(borderRadius: BorderRadiusStyle.roundedBorder10, onTap: () {onTapImgRectangleNine();}, child: ClipRRect(borderRadius: BorderRadius.circular(getHorizontalSize(10.00)), child: CommonImageView(imagePath: ImageConstant.imgRectangle9, height: getVerticalSize(200.00), width: getHorizontalSize(343.00), fit: BoxFit.cover)))), Align(alignment: Alignment.bottomCenter, child: Padding(padding: getPadding(left: 10, top: 11, right: 10, bottom: 11), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [GestureDetector(onTap: () {onTapRowcalendar();}, child: Padding(padding: getPadding(right: 10), child: Row(mainAxisAlignment: MainAxisAlignment.start, crossAxisAlignment: CrossAxisAlignment.center, mainAxisSize: MainAxisSize.min, children: [CommonImageView(svgPath: ImageConstant.imgCalendar20x20, height: getSize(20.00), width: getSize(20.00)), Padding(padding: getPadding(left: 5, top: 1, bottom: 1), child: Obx(() => Text(controller.tinTCModelObj.value.dateTxt.value, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtMulishRomanMedium14WhiteA700.copyWith(height: 1.29))))]))), Container(width: getHorizontalSize(317.00), margin: getMargin(top: 5), child: Text("msg_h_n_2_3_tri_u_kh_ch".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtMulishRomanBold14.copyWith(height: 1.43)))])))])), Padding(padding: getPadding(top: 20), child: Obx(() => ListView.builder(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, itemCount: controller.tinTCModelObj.value.tinTCItemList.length, itemBuilder: (context, index) {TinTCItemModel model = controller.tinTCModelObj.value.tinTCItemList[index]; return TinTCItemWidget(model);}))), Padding(padding: getPadding(top: 16), child: Row(mainAxisAlignment: MainAxisAlignment.start, crossAxisAlignment: CrossAxisAlignment.center, mainAxisSize: MainAxisSize.max, children: [ClipRRect(borderRadius: BorderRadius.circular(getHorizontalSize(10.00)), child: CommonImageView(imagePath: ImageConstant.imgRectangle825x80, height: getVerticalSize(25.00), width: getHorizontalSize(80.00), fit: BoxFit.cover)), Padding(padding: getPadding(left: 16, top: 4), child: Text("msg_h_i_an_t_ch_c_nhi_u".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtMulishRomanBold16.copyWith(height: 1.31)))]))]))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {controller.type.value = type;}))); } 
Widget getCurrentWidget(BottomBarEnum type) { switch (type) {case BottomBarEnum.Trangch: return TPhNgNhanhPage(); case BottomBarEnum.Skin: return SKiNPage(); case BottomBarEnum.Lchtrnh: return TOLChTrNhPage(); case BottomBarEnum.Bn: return BNPage(); default: return getDefaultWidget();} } 
onTapImgRectangleNine() { Get.toNamed(AppRoutes.newDetailsScreen); } 
Future<void> onTapRowcalendar() async  { DateTime? dateTime  = await showDatePicker(context: Get.context!,initialDate: controller.tinTCModelObj.value.selectedDateTxt , firstDate: DateTime(1970) ,lastDate: DateTime(DateTime.now().year,DateTime.now().month,DateTime.now().day)); if (dateTime != null) {controller.tinTCModelObj.value.selectedDateTxt=dateTime;controller.tinTCModelObj.value.dateTxt.value=dateTime.format(SHORT_DATE_WITH_FULL_YEAR);} } 
 }
